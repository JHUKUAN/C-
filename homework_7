// HW_7.cpp : 四則運算。

#include "stdafx.h"
#include <stdio.h>
#include <cstdlib>

int main()
{

	int a = 123, b = 45, c1, c2, c3, c4, c5;

	c1 = a+b;  //加-運算式
	c2 = a-b;  //減-運算式
	c3 = a*b;  //乘-運算式
	c4 = a/b;  //商數-運算式
	c5 = a%b;  //餘數-運算式

	printf("%3d + %3d = %4d \n", a, b, c1);   //印出 + 後結果
	printf("%3d - %3d = %4d \n", a, b, c2);   //印出 - 後結果
	printf("%3d * %3d = %4d \n", a, b, c3);   //印出 * 後結果
	printf("%3d / %3d = %4d \n", a, b, c4);   //印出 / 後"商數"結果
	printf("%3d %% %3d = %4d \n", a, b, c5);  //印出 / 後"餘數"結果  ※ 兩個%，只會顯示一個

	system("PAUSE");
	return 0;
}


//--------------------------------------------------------------------------
//        運算子     名稱 ----------------------------------------------------------
//        !          邏輯NOT
//        &&         邏輯AND
//        ||         邏輯OR

//        !=         不等於
//        %          餘數
//        *          相乘，指標
//        +          正號或相加
//        -          負號或相減
//        /          相除
//        <          小於
//        >          大於
//        <=         小於等於
//        >=         大於等於
//        ==         相等

//        =          指定值
//        /=         除後指定值 
//        *=         乘後指定值
//        -=         減後指定值
//        +=         加後指定值
//        >>=        右移後指定值
//        <<=        左移後指定值
//        |=         位元OR後指定值
//        ^=         位元XOR後指定值
//        &=         位元AND後指定值 

//        ++         增值一
//        --         減值一
//        >>         右移
//        <<         左移

//        &          位元AND,取位址
//        ?:         條件 
//        []         陣列標註 
//        ()         強迫轉型運算子 
//        |          位元OR
//        ~          位元補數
//        .          選結構中的成員
//        ，         順序值
//        defined    檢查巨集是否定義
//        sizeof     計算運算元的大小
//        ->         結構指標偏移值



